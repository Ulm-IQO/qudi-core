#  Example Qudi configuration file.

global:
    # list of modules to load when starting
    startup: []

    # Module server configuration for accessing qudi GUI/logic/hardware modules from remote clients
    remote_modules_server:
        address: 'localhost'
        port: 12345

    # Server port for serving the active qudi module namespace locally (localhost).
    # Used by e.g. the Qudi jupyter kernel.
    namespace_server_port: 18861

    # If this flag is set (True), all arguments passed to qudi module APIs from remote
    # (jupyter notebook, qudi console, remote modules) will be wrapped and passed "per value"
    # (serialized and de-serialized). This is avoiding a lot of inconveniences with using numpy in
    # remote clients.
    # If you do not want to use this workaround and know what you are doing, you can disable this
    # feature by setting this flag to False.
    force_remote_calls_by_value: True

    # Qss stylesheet for controlling the appearance of the GUIs.
    # Absolute path or relative to qudi.artwork.styles
    stylesheet: 'qdark.qss'

    # Default root directory for measurement data storage. All eventual data sub-directories should
    # be contained within this directory. This is not enforced, just convention.
    # The fallback directory is <user home>/qudi/Data/
    # default_data_dir: C:\Users\neverhorst\qudi\Data

    # Save data to daily data sub-directories by default
    daily_data_dirs: True

logic:
    taskrunnerlogic:
        module.Class: 'taskrunner.TaskRunnerLogic'
        options:
            module_tasks:
                the_task:
                    module.Class: 'qudi.tasks.test_tasks.TestTask'
                    connect:
                        derp: 'testlogic'
                the_other_task:
                    module.Class: 'qudi.tasks.test_tasks.TestTask2'
                    connect:
                        derp: 'testlogic'
                the_other_task2:
                    module.Class: 'qudi.tasks.test_tasks.TestTask2'
                    connect:
                        derp: 'testlogic'
                the_other_task3:
                    module.Class: 'qudi.tasks.test_tasks.TestTask2'
                    connect:
                        derp: 'testlogic'
                the_other_task4:
                    module.Class: 'qudi.tasks.test_tasks.TestTask2'
                    connect:
                        derp: 'testlogic'
                the_other_task5:
                    module.Class: 'qudi.tasks.test_tasks.TestTask2'
                    connect:
                        derp: 'testlogic'
                the_other_task6:
                    module.Class: 'qudi.tasks.test_tasks.TestTask2'
                    connect:
                        derp: 'testlogic'

gui:
    taskrunner:
        module.Class: 'taskrunner.task_runner_gui.TaskRunnerGui'
        connect:
            task_runner: 'taskrunnerlogic'
